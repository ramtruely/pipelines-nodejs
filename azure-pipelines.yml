# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  name: Default
  vmImage: ubuntu-latest
  
stages:
- stage: Build
  displayName: 'Build the Node js application'
  jobs: 
  - job: Buid_test
    displayName: 'Build and test'
     
    steps: 
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
      displayName: 'Install Node.js'
    - script: |
        npm install
        npm run build
        npm test
      displayName: 'npm install and build'  
    - task: PublishTestResults@2
      inputs:
       testResultsFormat: 'JUnit'
       testResultsFiles: '**/TEST-*.xml'
      displayName: Publishing test reports  
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: true
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true
      displayName: Archieve the file 
   
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)'
        artifact: 'drop'
        publishLocation: 'pipeline'
        
- stage: Test
  displayName: Deploying Testing
  dependsOn: Build
  jobs:
  - deployment: DeployTest    
    displayName: 'deploy Test'
    environment: Test
    strategy:
      runOnce:
        deploy:
          steps:
          
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Dev(c308cf65-784f-44a0-bcba-c4f5e93f1454)'
              appType: 'webApp'
              WebAppName: 'nodejsappatest'
              packageForLinux: '$(Pipeline.Workspace)/drop'
              enableCustomDeployment: true
              DeploymentType: 'zipDeploy'
              TakeAppOfflineFlag: false
            displayName: Deploy app to testing environment          
           
          
- stage: Production
  displayName: Deploying production
  dependsOn: Test
  jobs:
  - deployment: DeployProd    
    displayName: 'deploy prod'
    environment: Production
    strategy:
      runOnce:
        deploy:
          steps:      
                 
          
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Dev(c308cf65-784f-44a0-bcba-c4f5e93f1454)'
              appType: 'webApp'
              WebAppName: 'nodejsapp6'
              deployToSlotOrASE: true
              ResourceGroupName: 'test'
              SlotName: 'stage'
              packageForLinux: '$(Pipeline.Workspace)/drop'
              enableCustomDeployment: true
              DeploymentType: 'zipDeploy'
              TakeAppOfflineFlag: false
            displayName: Deploying application  

          - task: AzureAppServiceManage@0
            inputs:
              azureSubscription: 'Dev(c308cf65-784f-44a0-bcba-c4f5e93f1454)'
              Action: 'Swap Slots'
              WebAppName: 'nodejsapp6'
              ResourceGroupName: 'test'
              SourceSlot: 'stage'
            displayName: Managing the slots  
            
              



         


      


